name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ main ]
    paths: [ 'frontend/**' ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      backend-url: ${{ steps.get-backend-url.outputs.backend-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Get backend URL dynamically
        id: get-backend-url
        run: |
          # Get CloudFront distribution domain name for HTTPS support
          CLOUDFRONT_DOMAIN=$(aws cloudformation describe-stacks \
            --stack-name ConduitStack \
            --query 'Stacks[0].Outputs[?OutputKey==`CloudFrontDomainName`].OutputValue' \
            --output text \
            --region ${{ vars.AWS_REGION }})
          
          if [ "$CLOUDFRONT_DOMAIN" = "None" ] || [ -z "$CLOUDFRONT_DOMAIN" ]; then
            echo "❌ Error: Could not retrieve CloudFront domain name"
            echo "Make sure the backend infrastructure with CloudFront is deployed first"
            exit 1
          fi
          
          # CloudFront domain already includes https:// prefix from CDK output
          BACKEND_URL="$CLOUDFRONT_DOMAIN/api"
          echo "✅ Using Backend URL: $BACKEND_URL"
          echo "backend-url=$BACKEND_URL" >> $GITHUB_OUTPUT

      - name: Build
        run: cd frontend && npm run build
        env:
          VITE_API_URL: ${{ steps.get-backend-url.outputs.backend-url }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./frontend/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    outputs:
      frontend-url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

